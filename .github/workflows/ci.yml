name: Pylint, Pytest, Black, and Build

on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint pytest black colorama

  check-formatting:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install Black
      run: |
        pip install black
    - name: Check code formatting with Black
      run: |
        black --check .
        
  analyse-code:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')

  run-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run tests with pytest
      run: |
        pytest

  build-binaries:
    needs: [setup, check-formatting, analyse-code, run-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    - name: Build binary
      run: |
        pyinstaller --onefile ipnet/ipnet.py
    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: ipnet-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/ipnet