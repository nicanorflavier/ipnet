name: Pylint, Pytest, Black, and Build

on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint pytest black colorama

  check-formatting:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install Black
      run: |
        pip install black
    - name: Check code formatting with Black
      run: |
        black --check .

  analyse-code:
      needs: setup
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Install Pylint, Colorama and Pytest
        run: |
          pip install pylint colorama pytest
      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')

  run-tests:
      needs: setup
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Install Pytest and Colorama
        run: |
          pip install pytest colorama
      - name: Run tests with pytest
        run: |
          pytest

  build-binaries:
    needs: [setup, check-formatting, analyse-code, run-tests]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.7]
        architecture: [x64]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m venv venv
        source venv/bin/activate
        pip install requirements.txt
    - name: Build binary
      run: |
        source venv/bin/activate
        pyinstaller --onefile --hidden-import=colorama ipnet/ipnet.py
    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: ipnet-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/ipnet