name: Pylint, Pytest, Black, and Build

on: [push]

jobs:
  setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-latest, windows-latest, macos-latest]
        os: [macos-latest]
        #python-version: ["3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v4
    - name: Install gettext (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install gettext
        brew link --force gettext
        echo "DYLD_LIBRARY_PATH=/opt/homebrew/Cellar/gettext/0.22.5/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        python -m build

  check-formatting:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install Black
      run: |
        pip install black
    - name: Check code formatting with Black
      run: |
        black --check .

  analyse-code:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install Pylint and dependencies
      run: |
        pip install pylint colorama pytest
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')

  run-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install Pytest and dependencies
      run: |
        pip install pytest colorama
    - name: Run tests with pytest
      run: |
        pytest

  build-binaries:
    needs: [setup, check-formatting, analyse-code, run-tests]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        #os: [ubuntu-latest, windows-latest, macos-latest]
        os: [macos-latest]
        #python-version: ["3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.9"]
        architecture: [x64]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    - name: Build binary
      run: |
        pyinstaller --onefile --hidden-import=colorama src/ipnet.py
    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: ipnet-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/ipnet*
