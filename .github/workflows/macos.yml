name: Pylint, Pytest, Black, and Build (macOS)

on: [push]

jobs:
  setup:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4

    - name: Install gettext, zlib, bzip2 and dependencies
      run: |
        brew install gettext zlib bzip2
        echo "LDFLAGS=-L/opt/homebrew/opt/gettext/lib -L/opt/homebrew/opt/zlib/lib -L/opt/homebrew/opt/bzip2/lib" >> $GITHUB_ENV
        echo "CPPFLAGS=-I/opt/homebrew/opt/gettext/include -I/opt/homebrew/opt/zlib/include -I/opt/homebrew/opt/bzip2/include" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=/opt/homebrew/opt/gettext/lib/pkgconfig:/opt/homebrew/opt/zlib/lib/pkgconfig:/opt/homebrew/opt/bzip2/lib/pkgconfig" >> $GITHUB_ENV
        echo "/opt/homebrew/opt/gettext/lib" >> $GITHUB_PATH
        echo "/opt/homebrew/opt/zlib/lib" >> $GITHUB_PATH
        echo "/opt/homebrew/opt/bzip2/lib" >> $GITHUB_PATH
        export DYLD_LIBRARY_PATH=/opt/homebrew/opt/gettext/lib:/opt/homebrew/opt/zlib/lib:/opt/homebrew/opt/bzip2/lib:$DYLD_LIBRARY_PATH
        echo "DYLD_LIBRARY_PATH=/opt/homebrew/opt/gettext/lib:/opt/homebrew/opt/zlib/lib:/opt/homebrew/opt/bzip2/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
    
        if [ ! -d "/opt/homebrew/opt/gettext/lib" ] || [ ! -d "/opt/homebrew/opt/zlib/lib" ] || [ ! -d "/opt/homebrew/opt/bzip2/lib" ]; then
          echo "Library installation failed. Exiting."
          exit 1
        fi

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check macOS System Info
      run: |
        system_profiler SPSoftwareDataType
        python --version
        which python
        python -m pip --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build pyinstaller
        pip install -r requirements.txt

  check-formatting:
    needs: setup
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install Black
      run: |
        pip install black
    - name: Check code formatting with Black
      run: |
        black --check .

  analyse-code:
    needs: setup
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install Pylint and dependencies
      run: |
        pip install pylint colorama pytest
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')

  run-tests:
    needs: setup
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install Pytest and dependencies
      run: |
        pip install pytest colorama
    - name: Run tests with pytest
      run: |
        pytest

  build-binaries:
    needs: [setup, check-formatting, analyse-code, run-tests]
    runs-on: macos-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        architecture: [x64]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Install PyInstaller dependencies
      run: |
        brew install gettext zlib bzip2
        echo "LDFLAGS=-L/opt/homebrew/opt/gettext/lib -L/opt/homebrew/opt/zlib/lib -L/opt/homebrew/opt/bzip2/lib" >> $GITHUB_ENV
        echo "CPPFLAGS=-I/opt/homebrew/opt/gettext/include -I/opt/homebrew/opt/zlib/include -I/opt/homebrew/opt/bzip2/include" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=/opt/homebrew/opt/gettext/lib/pkgconfig:/opt/homebrew/opt/zlib/lib/pkgconfig:/opt/homebrew/opt/bzip2/lib/pkgconfig" >> $GITHUB_ENV
        echo "/opt/homebrew/opt/gettext/lib" >> $GITHUB_PATH
        echo "/opt/homebrew/opt/zlib/lib" >> $GITHUB_PATH
        echo "/opt/homebrew/opt/bzip2/lib" >> $GITHUB_PATH
        export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/opt/gettext/lib:/opt/homebrew/opt/zlib/lib:/opt/homebrew/opt/bzip2/lib:$DYLD_FALLBACK_LIBRARY_PATH
        echo "DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/opt/gettext/lib:/opt/homebrew/opt/zlib/lib:/opt/homebrew/opt/bzip2/lib:$DYLD_FALLBACK_LIBRARY_PATH" >> $GITHUB_ENV

    - name: Build binary
      run: |
        pyinstaller --onefile --hidden-import=colorama src/ipnet.py

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: ipnet-macos-${{ matrix.python-version }}
        path: dist/ipnet*
